import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers import LSTM
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error


#add google drive to be able to upload the data set
from google.colab import drive
drive.mount('/content/drive.')

#acquire data from excel
data = pd.read_excel("/content/drive./MyDrive/inventory/POF2018_A.xlsx",header=0)
print(data)

#data = data.set_index('Date_1')
data['Date'] = pd.to_datetime(data["Date_1"]).dt.date

#preparing the data for the ML algorithm
#values parameter defines the column to which the function is applied, in this case the number of products 
#beloning to certain categorie A, B or C is calculated, which is defined by the paremeter "column"
modelcols = data.pivot_table(values='Serial_Number', index='Date', columns='Product_Type', aggfunc=len)

#delete date_1 column
del data['Date_1']
print(modelcols)
modelcols.Product_A.dtype

dataset = data.pivot_table(values='Serial_Number', index='Date', columns='Part_Type', aggfunc=len)
#the empty cells are filled with zeros
dataset = dataset.fillna(0)
dataset.reset_index(inplace=True)

new_dataset = dataset.drop(['Date', 'Type_A', 'Type_B', 'Type_D', 'Type_E'], axis = 1)
#convert dataframe to matrix, to work with the list
dataset_E = new_dataset.values
dataset_E = dataset_E.astype('float32')

# normalize the dataset
scaler = MinMaxScaler(feature_range=(0, 1))
dataset_E = scaler.fit_transform(dataset_E)
print(dataset_E.shape[0], dataset_E.shape[1])


